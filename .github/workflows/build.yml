# .github/workflows/main.yml

name: Build and Test Spirographicals on macOS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_test:
    name: Test on macOS
    runs-on: macos-latest
    strategy:
      matrix:
        os: [macos-latest]

    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Set up Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Rust dependencies (Cargo)
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          logic/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Cache Homebrew packages
      uses: actions/cache@v4
      with:
        path: /opt/homebrew/
        key: ${{ runner.os }}-brew-cmake
        restore-keys: |
          ${{ runner.os }}-brew-

    - name: Install C++ dependencies
      run: brew install cmake

    - name: Create virtualenv and install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        python -m pip install --upgrade pip
        pip install maturin
        pip install pytest pytest-cov ruff mypy pre-commit numpy
      shell: bash

    - name: Build the entire project
      shell: bash
      run: |
        source .venv/bin/activate
        make build

    - name: Run the test suite
      shell: bash
      run: |
        source .venv/bin/activate
        make test

    - name: Package the final wheel
      shell: bash
      run: |
        source .venv/bin/activate
        make package

    - name: Upload Python wheel as artifact
      uses: actions/upload-artifact@v4
      with:
        name: python-wheel-${{ runner.os }}
        path: target/python/wheelhouse/*.whl
