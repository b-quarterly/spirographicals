[build-system]
requires = ["maturin>=1.5,<2.0"]
build-backend = "maturin.api"

[project]
name = "spirographicals"
version = "0.1.0"
description = "A high-performance spirograph-style graphing library powered by C++ and Rust."
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE.md" }
keywords = ["spirograph", "plotting", "visualization", "charts", "rust", "c++", "high-performance"]
authors = [
  { name = "Aitzaz Imtiaz", email = "aitzazimtiaz.ai@gmail.com" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Scientific/Engineering :: Visualization",
  "License :: Other/Proprietary License",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Rust",
  "Programming Language :: C++",
]

[project.urls]
Homepage = "https://github.com/b-quarterly/spirographicals"
Repository = "https://github.com/b-quarterly/spirographicals"
"Bug Tracker" = "https://github.com/b-quarterly/spirographicals/issues"

[project.optional-dependencies]
notebook = ["jupyterlab", "ipywidgets"]
dev = [
    "pytest>=8.0",
    "pytest-cov",
    "ruff",
    "mypy",
    "pre-commit",
]

[tool.maturin]
manifest-path = "logic/spiro-logic/Cargo.toml"
python-source = "api/src"
bindings = "pyo3"

[tool.pytest.ini_options]
testpaths = ["tests/python_tests"]
addopts = "-v --cov=spirographicals --cov-report=term-missing"
python_files = "test_*.py"

[tool.ruff]
line-length = 99
target-version = "py38"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP", "B", "C4"]
ignore = ["B008"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.cibuildwheel]
skip = "*-musllinux*"

[tool.cibuildwheel.windows]
environment = { CMAKE_ARGS = "-DCMAKE_BUILD_TYPE=Release", RUSTFLAGS="-L {project}/target/cpp/lib" }

[tool.cibuildwheel.macos]
environment = { CMAKE_ARGS = "-DCMAKE_BUILD_TYPE=Release", RUSTFLAGS="-L {project}/target/cpp/lib" }

[tool.cibuildwheel.linux]
environment-file = ".env.linux"
